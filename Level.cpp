#include "Level.h"
#include "Platform.h"

char Level::getTile(int x, int y) {
	if (x >= 0 && x <= levelWidth && y >= 0 && y <= levelHeight) {
		//if the position is in bounds of the level
		//return corresponding tile
		return level1[y * levelWidth + x];
	}
	else
		return ' ';
}

void Level::drawLevel(int level, float dt)
{
	for(Entity ent : entities)
	{
		ent.drawEntity(0, dt);
	}
	for(Platform p : platforms)
	{
		p.drawPlatFromMap(dt);
	}
}

void Level::generateLevel(int level) {
	if (level == 1) {
		level1 = "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
		level1 += "@-----------------=---------------=--------------@";
		level1 += "@-----------------=----========---=--------------@";
		level1 += "@-----------------=---------------=--------------@";
		level1 += "@------------------------------------------------@";
		level1 += "@------------------------------------------------@";
		level1 += "@------------------------------------------------@";
		level1 += "@--------------==--------------------------------@";
		level1 += "@-------------=--=-------------------------------@";
		level1 += "@--------------==--------------------------------@";
		level1 += "@------------------------------------------------@";
		level1 += "@------------------------------------------------@";
		level1 += "@---------------------------===----------p-===---@";
		level1 += "@-----------------------------------------------=@";
		level1 += "@------------------------o--------------------==-@";
		level1 += "@------------------------=-----------------==----@";
		level1 += "@------------------------=---------------=---=---@";
		level1 += "@------------------------=---------o------=------@";
		level1 += "@-----o------------------=--------=--=-----=--p--@";
		level1 += "@------------------------=---------=--=-----=----@";//y=20,x=51
	}
	else if(level == 2)
	{
		level2 = "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
		level2 += "@------------------------------------------------@";
		level2 += "@------------------------------------------------@";
		level2 += "@------------------------------------------------@";
		level2 += "@------------------------------------------------@";
		level2 += "@------------------------------------------------@";
		level2 += "@------------------------------------------------@";
		level2 += "@------------------------------------------------@";
		level2 += "@------------------------------------------------@";
		level2 += "@------------------------------------------------@";
		level2 += "@------------------------------------------------@";
		level2 += "@------------------------------------------------@";
		level2 += "@------------------------------------------------@";
		level2 += "@--o---------------==----------------------------@";
		level2 += "@-=-=------------=-------------------------------@";
		level2 += "@=====--------p-=--------===-------p-==----------@";
		level2 += "@--------------------p-=---------------=---------@";
		level2 += "@---------------------------------------=--------@";
		level2 += "@----------------------------------------=-------@";
		level2 += "@-----------------------------------------=------@";//y=20,x=51
	}
	else if(level == 3)
	{
		level3 = "@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";
		level3 += "@------------------------------------------------@";//y=20,x=51
	}
//This beibe reverses the whole string, not just X or Y. Now it starts bottom right->top left
	std::reverse(level1.begin(), level1.end());
	for (int x = levelWidth; x >= 0 ; x--) {
		for (int y = 0; y < levelHeight; y++) {
			char tileID = getTile(x, y);
			switch (tileID)
			{
			case '=': {
				Entity column(x * tileWidth, y * tileHeight, 50, 50);
				entities.push_back(column);
			}
				break;
			case '@': {
				Entity wall(x * tileWidth, y * tileHeight, 50, 50);
				entities.push_back(wall); 
			}
				break;
			
			case 'o': {
				Entity block(x * tileWidth, y * tileHeight, 25, 25);
				entities.push_back(block);
			}
				break;

			case 'p': {
				Platform plat = Platform(x * tileWidth, y * tileHeight, 150, 20); 
				//entities.push_back(plat);
				platforms.push_back(plat);
			}
				break;
			}
		}

	}
}
